name: Build Python App GUI

on:
  push:
    paths:
      - '**.py'
      - '**.ico'
      - '**.png'
      - '**.spec'
    branches:
      - main

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        pip install pyinstaller pillow

    - name: Clean pycache and bytecode
      run: |
        python -B -m compileall .
        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue -Path **\__pycache__\
        Get-ChildItem -Recurse -Include *.pyc | Remove-Item -Force

    - name: Build Windows EXE
      run: |
        pyinstaller --noconfirm build.spec
        mkdir bin
        move dist/VMManagerGCP/VMManagerGCP.exe bin/

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: VMManagerGCP-Windows
        path: bin/VMManagerGCP.exe

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        pip install pyinstaller pillow

    - name: Clean pycache and bytecode
      run: |
        python3 -B -m compileall .
        find . -type d -name '__pycache__' -exec rm -rf {} +
        find . -type f -name '*.pyc' -delete

    - name: Build macOS binary
      run: |
        pyinstaller --noconfirm build.spec
        mkdir bin
        mv dist/VMManagerGCP bin/

    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: VMManagerGCP-macOS
        path: bin/VMManagerGCP

  release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./downloads

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: "VM Manager GCP"
        tag_name: v1.0.${{ github.run_number }}
        files: |
          downloads/VMManagerGCP-Windows/VMManagerGCP.exe
          downloads/VMManagerGCP-macOS/VMManagerGCP
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
